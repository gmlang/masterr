I"§<p>Previously, I wrote an <a href="https://masterr.org/r/how-to-work-with-files-in-r-and-improve-reproducibility/">article</a> on how not to use <code class="language-plaintext highlighter-rouge">setwd()</code>. Today I discovered a side effect of <code class="language-plaintext highlighter-rouge">setwd()</code> that is really cool and useful. It turns out that when you run <code class="language-plaintext highlighter-rouge">setwd(path)</code>, not only will it reset the working directory to path, it will also return the working directory before the reset.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># get the default (current) working directory</span><span class="w">
</span><span class="n">getwd</span><span class="p">()</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "/Users/gmlang/Communities/masterr/_knitr"</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># store it</span><span class="w">
</span><span class="n">home.path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()</span><span class="w">

</span><span class="c1"># create a subfolder called Projects</span><span class="w">
</span><span class="n">dir.create</span><span class="p">(</span><span class="n">file.path</span><span class="p">(</span><span class="n">home.path</span><span class="p">,</span><span class="w"> </span><span class="s2">"Projects"</span><span class="p">),</span><span class="w"> </span><span class="n">showWarnings</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">

</span><span class="c1"># reset the Projects folder as the working directory and store the previous working directory in a variable called old  </span><span class="w">
</span><span class="n">old</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">setwd</span><span class="p">(</span><span class="n">file.path</span><span class="p">(</span><span class="n">home.path</span><span class="p">,</span><span class="w"> </span><span class="s2">"Projects"</span><span class="p">))</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">old</span><span class="p">)</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "/Users/gmlang/Communities/masterr/_knitr"</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># check old and home.path are the same</span><span class="w">
</span><span class="n">old</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="n">home.path</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] TRUE</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># get the current working directory (this is after the reset)</span><span class="w">
</span><span class="n">getwd</span><span class="p">()</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "/Users/gmlang/Communities/masterr/_knitr/Projects"</code></pre></figure>

<p>We can use this side effect and <code class="language-plaintext highlighter-rouge">on.exit()</code><sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup> to write functions that guaranttees to restore the working directory when the function exists. For example, the following function is taken from Hadleyâ€™s book
<a href="https://www.amazon.com/gp/product/B00NFODLIQ/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B00NFODLIQ&amp;linkCode=as2&amp;tag=cabaceo-20&amp;linkId=ADGTP76QZMPYXEVL">Advanced R</a><img src="https://ir-na.amazon-adsystem.com/e/ir?t=cabaceo-20&amp;l=as2&amp;o=1&amp;a=B00NFODLIQ" width="1" height="1" border="0" alt="" style="border:none !important; margin:0px !important;" />.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">in_dir</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">dir</span><span class="p">,</span><span class="w"> </span><span class="n">code</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">old</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">setwd</span><span class="p">(</span><span class="n">dir</span><span class="p">)</span><span class="w">
  </span><span class="nf">on.exit</span><span class="p">(</span><span class="n">setwd</span><span class="p">(</span><span class="n">old</span><span class="p">))</span><span class="w">

  </span><span class="n">force</span><span class="p">(</span><span class="n">code</span><span class="p">)</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<p>Pass the variable <code class="language-plaintext highlighter-rouge">old</code> and the function <code class="language-plaintext highlighter-rouge">getwd()</code> to it, and you get</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">in_dir</span><span class="p">(</span><span class="n">old</span><span class="p">,</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "/Users/gmlang/Communities/masterr/_knitr"</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">getwd</span><span class="p">()</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "/Users/gmlang/Communities/masterr/_knitr"</code></pre></figure>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>The code in <code class="language-plaintext highlighter-rouge">on.exit()</code> is run regardless of whether the function does an early return, throws an error, or simply reaches the end of the function body.Â <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET