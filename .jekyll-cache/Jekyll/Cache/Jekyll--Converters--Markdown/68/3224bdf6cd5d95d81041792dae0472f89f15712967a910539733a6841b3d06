I"ú<p>Exponential smoothing is a simple method to forecast the future given the present and the past. You can use it to forecast sales, revenues, production levels, marketing expenses, the weather, stock prices, and many other things that happend over time. Itâ€™s crude so sometimes it doesnâ€™t work well. But sometimes it does work fine, and you can often use it as a data processing tool to smooth out timeseries data before using them to build more complicated models.</p>

<p>Exponential smoothing is essentially a method of weighted averages. Hereâ€™s how it works:</p>
<ol>
  <li>take the current value and weight it by a number (call it alpha) bewtween 0 and 1 (for example, 0.8),</li>
  <li>take the previous value and weight it by 1-alpha (for example, 0.2),</li>
  <li>sum results from step 1 and 2 and use it as an estimate for the next value.</li>
</ol>

<p>Hereâ€™s a function that implements it in R.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">exp_smooth</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">alpha</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="c1"># Performs exponential smoothing by taking a weighted average of the</span><span class="w">
        </span><span class="c1"># current and previous data points</span><span class="w">
        </span><span class="c1">#</span><span class="w">
        </span><span class="c1"># x     : numeric vector</span><span class="w">
        </span><span class="c1"># alpha : number between 0 and 1, weight assigned to current data value</span><span class="w">
        </span><span class="c1">#</span><span class="w">
        </span><span class="c1"># Returns a numeric vector of the same length as x and values as the </span><span class="w">
        </span><span class="c1">#       weighted averages of the (current, previous) consecutive pairs</span><span class="w">
        </span><span class="n">s</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">numeric</span><span class="p">(</span><span class="nf">length</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="c1"># make s 1 cell longer than x</span><span class="w">
        </span><span class="k">for</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="k">in</span><span class="w"> </span><span class="nf">seq_along</span><span class="p">(</span><span class="n">s</span><span class="p">))</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="n">i</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="c1"># set the initial value of s the same as that of x</span><span class="w">
                        </span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w">
                </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
                        </span><span class="c1"># weight current value with alpha and previous value </span><span class="w">
                        </span><span class="c1"># with 1-alpha, and sum</span><span class="w">
                        </span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">alpha</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="p">(</span><span class="m">1</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">alpha</span><span class="p">)</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="m">1</span><span class="p">]</span><span class="w">
                </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
        </span><span class="n">s</span><span class="p">[</span><span class="m">-1</span><span class="p">]</span><span class="w"> </span><span class="c1"># drop the 1st element in s because it's extra</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<p>In practice, people often weight the current value more heavily than the previous value, and this is based on a common sensical hypothesis that when making predictions about the future, the present matters more than the past. The following example uses <code class="language-plaintext highlighter-rouge">alpha=0.8</code> to exponentially smooth a vector of randomly generated numbers from a uniform distribution.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">set.seed</span><span class="p">(</span><span class="m">10393</span><span class="p">)</span><span class="w">
</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">round</span><span class="p">(</span><span class="n">runif</span><span class="p">(</span><span class="m">5</span><span class="p">),</span><span class="w"> </span><span class="m">3</span><span class="p">)</span><span class="w">
</span><span class="nf">round</span><span class="p">(</span><span class="n">exp_smooth</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="m">0.5</span><span class="p">),</span><span class="w"> </span><span class="m">3</span><span class="p">)</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] 0.253 0.306 0.374 0.187 0.528</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] 0.253 0.359 0.443 0.000 0.869</code></pre></figure>

:ET