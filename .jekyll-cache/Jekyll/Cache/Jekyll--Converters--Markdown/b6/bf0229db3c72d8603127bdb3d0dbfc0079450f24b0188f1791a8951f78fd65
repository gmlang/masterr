I"‘<p>The R functions <code class="language-plaintext highlighter-rouge">substitute()</code> and <code class="language-plaintext highlighter-rouge">deparse()</code> are very interesting and hereâ€™s why.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">foo1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">arg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">deparse</span><span class="p">(</span><span class="nf">substitute</span><span class="p">(</span><span class="n">a</span><span class="p">))</span><span class="w">
        </span><span class="n">dots</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">substitute</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="n">...</span><span class="p">))[</span><span class="m">-1</span><span class="p">]</span><span class="w">
        </span><span class="nf">c</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">dots</span><span class="p">,</span><span class="w"> </span><span class="n">deparse</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">foo2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="w"> </span><span class="n">...</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="n">arg</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">deparse</span><span class="p">(</span><span class="nf">substitute</span><span class="p">(</span><span class="n">a</span><span class="p">))</span><span class="w">
        </span><span class="n">dots</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">...</span><span class="p">)</span><span class="w">
        </span><span class="nf">c</span><span class="p">(</span><span class="n">arg</span><span class="p">,</span><span class="w"> </span><span class="n">sapply</span><span class="p">(</span><span class="n">dots</span><span class="p">,</span><span class="w"> </span><span class="n">deparse</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">;</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">;</span><span class="w"> </span><span class="n">z</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="w">

</span><span class="n">foo1</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">)</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "x" "y" "z"</code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">foo2</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="p">,</span><span class="w"> </span><span class="n">z</span><span class="p">)</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## [1] "x" "2" "3"</code></pre></figure>

<p>You can learn more about them <a href="https://stackoverflow.com/questions/5754367/using-substitute-to-get-argument-name-with">here</a> and <a href="https://stackoverflow.com/questions/3057341/how-to-use-rs-ellipsis-feature-when-writing-your-own-function">here</a>.</p>
:ET